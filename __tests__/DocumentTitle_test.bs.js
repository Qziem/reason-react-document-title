// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var React = require("react");
var Enzyme = require("bs-enzyme/src/Enzyme.js");
var Enzyme$1 = require("enzyme");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var EnzymeAdapterReact = require("enzyme-adapter-react-16");
var DocumentTitle$ReasonReactDocumentTitle = require("../src/DocumentTitle.bs.js");

Enzyme.configureEnzyme(new EnzymeAdapterReact());

describe("DocumentTitle", (function () {
        beforeEach((function () {
                return DocumentTitle$ReasonReactDocumentTitle.unsetTitle(/* () */0);
              }));
        Jest.test("should render nothing if no children", (function (param) {
                return Jest.Expect[/* toMatchSnapshot */16](Jest.Expect[/* expect */0](Enzyme$1.shallow(ReasonReact.element(undefined, undefined, DocumentTitle$ReasonReactDocumentTitle.make("Some Title", /* array */[]))).html()));
              }));
        Jest.test("should render childen if provided", (function (param) {
                return Jest.Expect[/* toMatchSnapshot */16](Jest.Expect[/* expect */0](Enzyme$1.shallow(ReasonReact.element(undefined, undefined, DocumentTitle$ReasonReactDocumentTitle.make("Some Title", /* array */[React.createElement("div", undefined, "Some Children")]))).html()));
              }));
        Jest.test("mount should set document title", (function (param) {
                Enzyme$1.shallow(ReasonReact.element(undefined, undefined, DocumentTitle$ReasonReactDocumentTitle.make("Some Title", /* array */[])));
                return Jest.Expect[/* toBe */2]("Some Title", Jest.Expect[/* expect */0](DocumentTitle$ReasonReactDocumentTitle.getTitle(/* () */0)));
              }));
        return Jest.test("unmount should set empty document title", (function (param) {
                      var wrapper = Enzyme$1.shallow(ReasonReact.element(undefined, undefined, DocumentTitle$ReasonReactDocumentTitle.make("Some Title", /* array */[])));
                      wrapper.unmount();
                      return Jest.Expect[/* toBe */2]("", Jest.Expect[/* expect */0](DocumentTitle$ReasonReactDocumentTitle.getTitle(/* () */0)));
                    }));
      }));

describe("DocumentTitle.handleDidUpdate", (function () {
        beforeEach((function () {
                return DocumentTitle$ReasonReactDocumentTitle.unsetTitle(/* () */0);
              }));
        Jest.test("should set document title if has been changed", (function (param) {
                DocumentTitle$ReasonReactDocumentTitle.setTitle("Some Title");
                var newTitle = "Another Title";
                DocumentTitle$ReasonReactDocumentTitle.handleDidUpdate(newTitle);
                return Jest.Expect[/* toBe */2](newTitle, Jest.Expect[/* expect */0](DocumentTitle$ReasonReactDocumentTitle.getTitle(/* () */0)));
              }));
        return Jest.test("should return unit", (function (param) {
                      DocumentTitle$ReasonReactDocumentTitle.setTitle("Some Title");
                      var result = DocumentTitle$ReasonReactDocumentTitle.handleDidUpdate("Another Title");
                      return Jest.Expect[/* toBe */2](/* () */0, Jest.Expect[/* expect */0](result));
                    }));
      }));

/*  Not a pure module */
